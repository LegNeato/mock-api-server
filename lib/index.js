// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var child_process, Dsl, httpSync, MockApiServer;
  child_process = require('child_process');
  Dsl = require('./dsl');
  httpSync = require('http-sync');
  MockApiServer = function () {
    function MockApiServer(param$) {
      var instance$;
      instance$ = this;
      this._addResponseSpecification = function (a) {
        return MockApiServer.prototype._addResponseSpecification.apply(instance$, arguments);
      };
      this.options = param$;
    }
    MockApiServer.prototype.start = function (done) {
      var args;
      args = [
        '--port',
        this.options.port
      ];
      if (!this.options.logToConsole)
        args.push('--no-log-to-console');
      if (this.options.logToFile) {
        args.push('--log-to-file');
        args.push(this.options.logToFile);
      }
      child_process.fork(__dirname + '/../bin/mock-api-server', args, { silent: false });
      return setTimeout(done, 500);
    };
    MockApiServer.prototype.stop = function () {
      return this._sendCommand('stop');
    };
    MockApiServer.prototype.reset = function () {
      return this._sendCommand('reset');
    };
    MockApiServer.prototype.respondTo = function (args) {
      args = 1 <= arguments.length ? [].slice.call(arguments, 0) : [];
      return new Dsl(this._addResponseSpecification, args);
    };
    MockApiServer.prototype._addResponseSpecification = function (spec) {
      var request;
      request = httpSync.request({
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        port: this.options.port,
        body: JSON.stringify(spec),
        path: '/mock-api/add-response'
      });
      return request.end();
    };
    MockApiServer.prototype._sendCommand = function (name) {
      var request;
      request = httpSync.request({
        method: 'GET',
        port: this.options.port,
        path: '/mock-api/' + name
      });
      return request.end();
    };
    return MockApiServer;
  }();
  module.exports = function (options, cb) {
    var server;
    server = new MockApiServer(options);
    return server.start(function (err) {
      if (!(null != cb))
        return;
      return cb(err, server);
    });
  };
}.call(this);
