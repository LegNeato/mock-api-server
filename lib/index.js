// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var cannedFs, cannedMap, express, MockApiServer;
  express = require('express');
  cannedFs = require('./canned_fs');
  cannedMap = require('./canned_map');
  MockApiServer = function () {
    function MockApiServer(param$) {
      var instance$;
      instance$ = this;
      this._cannedResponses = function (a, b, c) {
        return MockApiServer.prototype._cannedResponses.apply(instance$, arguments);
      };
      this.options = param$;
    }
    MockApiServer.prototype.start = function (done) {
      this.app = express();
      this.app.use(this._cannedResponses);
      return cannedFs('test/mock-api', function (this$) {
        return function (err, hash) {
          this$.cannedMap = cannedMap(hash);
          return this$.server = this$.app.listen(this$.options.port, done);
        };
      }(this));
    };
    MockApiServer.prototype.stop = function () {
      return this.server.close();
    };
    MockApiServer.prototype._cannedResponses = function (req, res, next) {
      var response;
      response = this.cannedMap({
        method: req.method,
        path: req.path
      });
      if (response === void 0)
        return next();
      return res.send(JSON.stringify(response));
    };
    return MockApiServer;
  }();
  module.exports = function (options, cb) {
    var server;
    server = new MockApiServer(options);
    return server.start(function (err) {
      if (!(null != cb))
        return;
      return cb(err, server);
    });
  };
}.call(this);
